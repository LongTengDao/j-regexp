/*!
 * 模块名称：@ltd/j-regexp
 * 模块功能：可读性更好的正则表达式创建方式。
   　　　　　More readable way for creating RegExp.
 * 模块版本：1.2.0
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-regexp/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-regexp/
 */
(function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e=e||self).jRegExp=n()})(this,function(){"use strict";var r=Array.prototype.slice,u=/[\n\t]/g;function t(e,n){for(var r=e[0],t=n.length,i=0;i<t;){var o=n[i];r+=(o instanceof RegExp?o.source:o)+e[++i]}return r.replace(u,"")}function n(e){return RegExp(t(e.raw,r.call(arguments,1)))}function i(n){return function(e){return RegExp(t(e.raw,r.call(arguments,1)),n)}}var o=i("g"),f=i("i"),c=i("m"),g=i("gi"),a=i("gm"),p=i("im"),l=i("gim");return function(){var e={version:"1.2.0",newRegExp:n,NewRegExp:i,g:o,i:f,m:c,gi:g,gm:a,im:p,gim:l};return e["default"]=e}()});
//# sourceMappingURL=j-regexp.min.js.map