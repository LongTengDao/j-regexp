{
	"version":
		3,
	"file":
		"j-regexp.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","newRegExp.ts","clearRegExp.ts","../../j-groupify/src/groupify.ts","export.ts"],
	"sourcesContent":
		[
			"export default '6.2.1';",
			"import RegExp from '.RegExp';\n\nvar NT = /[\\n\\t]/g;\nvar SEARCH_ESCAPE = /\\\\./g;\nfunction graveAccentReplacer ($$        ) { return $$==='\\\\`' ? '`' : $$; }\nvar flags        ;\nvar u         ;\n\nfunction RE (template                      ) {\n\tvar raw = template.raw;\n\tvar source = raw[0];\n\tfor ( var length = arguments.length, index = 1; index<length; ++index ) {\n\t\tvar values = arguments[index];\n\t\tsource += ( values instanceof RegExp ? values.source : values )+raw[index];\n\t}\n\tif ( u ) { source = source.replace(SEARCH_ESCAPE, graveAccentReplacer); }\n\treturn RegExp(source.replace(NT, ''), flags);\n}\n\nexport default function newRegExp (template_flags                               )                                                          {\n\tif ( typeof template_flags==='object' ) {\n\t\tflags = '';\n\t\tu = false;\n\t\treturn /*#__PURE__*/ RE.apply(null, arguments       );\n\t}\n\tvar U = /*#__PURE__*/ template_flags.indexOf('u')>=0;\n\treturn function newRegExp (template                      )         {\n\t\tflags = template_flags;\n\t\tu = U;\n\t\treturn /*#__PURE__*/ RE.apply(null, arguments       );\n\t};\n};\n",
			"import RegExp from '.RegExp';\n\nvar clearRegExp = '$_' in RegExp\n\t? function () {\n\t\tvar REGEXP = /^/;\n\t\treturn function clearRegExp                (value    )                {\n\t\t\tREGEXP.test('');\n\t\t\treturn value;\n\t\t};\n\t}()\n\t: function clearRegExp                (value    )                {\n\t\treturn value;\n\t};\n\nexport default clearRegExp;",
			"import create from '.Object.create?=';\nimport NULL from '.null.prototype';\n\nvar NEED_TO_ESCAPE_IN_REGEXP = /^[$()*+\\-.?[\\\\\\]^{|]/;\nvar SURROGATE_PAIR = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nvar GROUP = create(NULL)         ;\n\nexport default function groupify (branches          , uFlag          , noEscape          )         {\n\tvar group = create(NULL)         ;\n\tvar appendBranch = uFlag ? appendPointBranch : appendCodeBranch;\n\tfor ( var length         = branches.length, index         = 0; index<length; ++index ) { appendBranch(group, branches[index]); }\n\treturn sourcify(group, !noEscape);\n};\n\nfunction appendPointBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar character         = SURROGATE_PAIR.test(branch) ? branch.slice(0, 2) : branch.charAt(0);\n\t\tappendPointBranch(group[character] || ( group[character] = create(NULL)          ), branch.slice(character.length));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction appendCodeBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar character         = branch.charAt(0);\n\t\tappendCodeBranch(group[character] || ( group[character] = create(NULL)          ), branch.slice(1));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction sourcify (group       , needEscape         )         {\n\tvar branches           = [];\n\tvar singleCharactersBranch           = [];\n\tvar noEmptyBranch          = true;\n\tfor ( var character in group ) {\n\t\tif ( character ) {\n\t\t\tvar sub_branches         = sourcify(group[character], needEscape);\n\t\t\tif ( needEscape && NEED_TO_ESCAPE_IN_REGEXP.test(character) ) { character = '\\\\'+character; }\n\t\t\tsub_branches ? branches.push(character+sub_branches) : singleCharactersBranch.push(character);\n\t\t}\n\t\telse { noEmptyBranch = false; }\n\t}\n\tsingleCharactersBranch.length && branches.unshift(singleCharactersBranch.length===1 ? singleCharactersBranch[0] : '['+singleCharactersBranch.join('')+']');\n\treturn branches.length===0\n\t\t? ''\n\t\t: ( branches.length===1 && ( singleCharactersBranch.length || noEmptyBranch )\n\t\t\t? branches[0]\n\t\t\t: '(?:'+branches.join('|')+')'\n\t\t)\n\t\t+( noEmptyBranch ? '' : '?' );\n}\n\n                                            \n",
			"import version from './version?text';\nimport newRegExp from './newRegExp';\nimport clearRegExp from './clearRegExp';\nimport groupify from './groupify';\n\nexport {\n\tversion,\n\tnewRegExp,\n\tclearRegExp,\n\tgroupify,\n};\n\nimport Default from '.default?=';\nexport default Default(newRegExp, {\n\tversion: version,\n\tnewRegExp: newRegExp,\n\tclearRegExp: clearRegExp,\n\tgroupify: groupify\n});\n"
		],
	"names":
		["flags","u","NT","SEARCH_ESCAPE","graveAccentReplacer","$$","RE","template","raw","source","length","arguments","index","values","RegExp","replace","newRegExp","template_flags","apply","U","indexOf","REGEXP","clearRegExp","value","test","NEED_TO_ESCAPE_IN_REGEXP","SURROGATE_PAIR","GROUP","create","NULL","appendPointBranch","group","branch","character","slice","charAt","appendCodeBranch","Default","version","groupify","branches","uFlag","noEscape","appendBranch","sourcify","needEscape","singleCharactersBranch","noEmptyBranch","sub_branches","push","unshift","join"],
	"mappings":
		";;;;;;;;;;gMAAA,ICKIA,EACAC,EAJAC,EAAK,UACLC,EAAgB,OACpB,SAASC,EAAqBC,GAAc,MAAY,QAALA,EAAa,IAAMA,EAItE,SAASC,EAAIC,GAGZ,IAFA,IAAIC,EAAMD,EAASC,IACfC,EAASD,EAAI,GACPE,EAASC,UAAUD,OAAQE,EAAQ,EAAGA,EAAMF,IAAUE,EAAQ,CACvE,IAAIC,EAASF,UAAUC,GACvBH,IAAYI,aAAkBC,OAASD,EAAOJ,OAASI,GAASL,EAAII,GAGrE,OADKX,IAAMQ,EAASA,EAAOM,QAAQZ,EAAeC,IAC3CU,OAAOL,EAAOM,QAAQb,EAAI,IAAKF,GAGxB,SAASgB,EAAWC,GAClC,GAA6B,iBAAjBA,EAGX,OAFAjB,EAAQ,GACRC,GAAI,EACiBK,EAAGY,MAAM,KAAMP,WAErC,IAAIQ,EAAkBF,EAAeG,QAAQ,MAAM,EACnD,OAAO,SAAoBb,GAG1B,OAFAP,EAAQiB,EACRhB,EAAIkB,EACiBb,EAAGY,MAAM,KAAMP,YC3BtC,IAEMU,EAFFC,EAAc,OAAQR,QAEpBO,EAAS,IACN,SAAqCE,GAE3C,OADAF,EAAOG,KAAK,IACLD,IAGP,SAAqCA,GACtC,OAAOA,srCCRLE,EAA2B,uBAC3BC,EAAiB,kCACjBC,EAAQC,EAAOC,GASnB,SAASC,EAAmBC,EAAcC,GACzC,GAAKA,EAAS,CACb,IAAIC,EAAoBP,EAAeF,KAAKQ,GAAUA,EAAOE,MAAM,EAAG,GAAKF,EAAOG,OAAO,GACzFL,EAAkBC,EAAME,KAAgBF,EAAME,GAAaL,EAAOC,IAAkBG,EAAOE,MAAMD,EAAUvB,cAErGqB,EAAM,IAAMJ,EAGpB,SAASS,EAAkBL,EAAcC,GACxC,GAAKA,EAAS,CACb,IAAIC,EAAoBD,EAAOG,OAAO,GACtCC,EAAiBL,EAAME,KAAgBF,EAAME,GAAaL,EAAOC,IAAkBG,EAAOE,MAAM,SAE1FH,EAAM,IAAMJ,kdCdLU,CAAQrB,EAAW,CACjCsB,QJdc,QIedtB,UAAWA,EACXM,YAAaA,EACbiB,SDVD,SAAkCC,EAAoBC,EAAiBC,GAGtE,IAFA,IAAIX,EAAQH,EAAOC,GACfc,EAAeF,EAAQX,EAAoBM,EACrC1B,EAAiB8B,EAAS9B,OAAQE,EAAgB,EAAGA,EAAMF,IAAUE,EAAU+B,EAAaZ,EAAOS,EAAS5B,IACtH,OAmBD,SAASgC,EAAUb,EAAcc,GAChC,IAAIL,EAAqB,GACzB,IAAIM,EAAmC,GACvC,IAAIC,GAAyB,EAC7B,IAAM,IAAId,KAAaF,EACtB,GAAKE,EAAY,CAChB,IAAIe,EAAuBJ,EAASb,EAAME,GAAYY,GACjDA,GAAcpB,EAAyBD,KAAKS,KAAeA,EAAY,KAAKA,GACjFe,EAAeR,EAASS,KAAKhB,EAAUe,GAAgBF,EAAuBG,KAAKhB,QAE7Ec,GAAgB,EAExBD,EAAuBpC,QAAU8B,EAASU,QAAwC,IAAhCJ,EAAuBpC,OAAaoC,EAAuB,GAAK,IAAIA,EAAuBK,KAAK,IAAI,KACtJ,OAAyB,IAAlBX,EAAS9B,OACb,IACoB,IAAlB8B,EAAS9B,SAAgBoC,EAAuBpC,QAAUqC,GAC3DP,EAAS,GACT,MAAMA,EAASW,KAAK,KAAK,MAEzBJ,EAAgB,GAAK,KAtClBH,CAASb,GAAQW"
}