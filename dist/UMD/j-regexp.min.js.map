{
	"version":
		3,
	"file":
		"j-regexp.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","theRegExp.ts","newRegExp.ts","clearRegExp.ts","groupify.ts","export.ts"],
	"sourcesContent":
		[
			"export default'8.1.0';",
			"import bind from '.Function.prototype.bind?';\nimport test from '.RegExp.prototype.test';\nimport exec from '.RegExp.prototype.exec';\n\nexport var Test                                           = bind\n\t? /*#__PURE__*/bind.bind(test       )       \n\t: function (re) {\n\t\treturn function (string) {\n\t\t\treturn test.call(re, string);\n\t\t};\n\t};\n\nexport var Exec                                           = bind\n\t? /*#__PURE__*/bind.bind(exec       )       \n\t: function (re) {\n\t\treturn function (string) {\n\t\t\treturn exec.call(re, string);\n\t\t};\n\t};\n\nexport default function theRegExp (re        )         {\n\tvar test = re.test = Test(re);\n\tvar exec = re.exec = Exec(re);\n\tvar source = test.source = exec.source = re.source;\n\ttest.unicode = exec.unicode = re.unicode;\n\ttest.ignoreCase = exec.ignoreCase = re.ignoreCase;\n\ttest.multiline = exec.multiline = source.indexOf('^')<0 && source.indexOf('$')<0 ? null : re.multiline;\n\ttest.dotAll = exec.dotAll = source.indexOf('.')<0 ? null : re.dotAll;\n\treturn re;\n};\n\n              \n\t              \n\t                       \n\t                          \n\t                         \n\t                      \n  ",
			"import TypeError from '.TypeError';\nimport SyntaxError from '.SyntaxError';\nimport RegExp from '.RegExp';\nimport freeze from '.Object.freeze?';\nimport bind from '.Function.prototype.bind?';\nimport apply from '.Reflect.apply?';\nimport Proxy from '.Proxy?';\n\nimport { Test, Exec } from './theRegExp';\n\nvar NT = /[\\n\\t]+/g;\nvar ESCAPE = /\\\\./g;\nfunction graveAccentReplacer ($$        ) { return $$==='\\\\`' ? '`' : $$; }\n\nvar includes = ''.includes       \n\t? function (that        , searchString        ) { return that.includes(searchString); }\n\t: function (that        , searchString        ) { return that.indexOf(searchString)>-1; };\n\nfunction RE (               template                      ) {\n\tvar U = this.U;\n\tvar I = this.I;\n\tvar M = this.M;\n\tvar S = this.S;\n\tvar raw = template.raw;\n\tvar source = raw[0] .replace(NT, '');\n\tvar index = 1;\n\tvar length = arguments.length;\n\twhile ( index!==length ) {\n\t\tvar value            \n\t\t\t                       \n\t\t\t                          \n\t\t\t                             \n\t\t\t                            \n\t\t\t                         \n\t\t  = arguments[index];\n\t\tif ( typeof value==='string' ) { source += value; }\n\t\telse {\n\t\t\tvar value_source = value.source;\n\t\t\tif ( typeof value_source!=='string' ) { throw TypeError('source'); }\n\t\t\tif ( value.unicode===U ) { throw SyntaxError('unicode'); }\n\t\t\tif ( value.ignoreCase===I ) { throw SyntaxError('ignoreCase'); }\n\t\t\tif ( value.multiline===M && ( includes(value_source, '^') || includes(value_source, '$') ) ) { throw SyntaxError('multiline'); }\n\t\t\tif ( value.dotAll===S && includes(value_source, '.') ) { throw SyntaxError('dotAll'); }\n\t\t\tsource += value_source;\n\t\t}\n\t\tsource += raw[index++] .replace(NT, '');\n\t}\n\tvar re         = RegExp(U ? source = source.replace(ESCAPE, graveAccentReplacer) : source, this.flags);\n\tvar test = re.test = Test(re);\n\tvar exec = re.exec = Exec(re);\n\ttest.source = exec.source = source;\n\ttest.unicode = exec.unicode = !U;\n\ttest.ignoreCase = exec.ignoreCase = !I;\n\ttest.multiline = exec.multiline = includes(source, '^') || includes(source, '$') ? !M : null;\n\ttest.dotAll = exec.dotAll = includes(source, '.') ? !S : null;\n\treturn re;\n}\n\nvar RE_bind = bind && /*#__PURE__*/bind.bind(RE       );\n\nfunction Context (flags        )          {\n\treturn {\n\t\tU: !includes(flags, 'u'),\n\t\tI: !includes(flags, 'i'),\n\t\tM: !includes(flags, 'm'),\n\t\tS: !includes(flags, 's'),\n\t\tflags: flags\n\t};\n}\n\nvar CONTEXT          = /*#__PURE__*/Context('');\n\nexport default Proxy\n\t? /*#__PURE__*/new Proxy(RE, {\n\t\tapply: function (RE, thisArg, args                                   ) { return apply(RE, CONTEXT, args); }\n\t\t,\n\t\tget: function (RE, flags        ) { return RE_bind(Context(flags)); }\n\t\t,\n\t\tdefineProperty: function () { return false; }\n\t\t,\n\t\tpreventExtensions: function () { return false; }\n\t})\n\t: /*#__PURE__*/function () {\n\t\tRE.apply = RE.apply;\n\t\tvar newRegExp = function () { return RE.apply(CONTEXT, arguments       ); }       ;\n\t\tvar d = 1;\n\t\tvar g = d*2;\n\t\tvar i = g*2;\n\t\tvar m = i*2;\n\t\tvar s = i*2;\n\t\tvar u = s*2;\n\t\tvar y = u*2;\n\t\tvar flags = y*2 - 1;\n\t\twhile ( flags-- ) {\n\t\t\t( function (context) {\n\t\t\t\tnewRegExp[context.flags] = function () { return RE.apply(context, arguments       ); };\n\t\t\t} )(Context(\n\t\t\t\t( flags & d ? '' : 'd' )\n\t\t\t\t+\n\t\t\t\t( flags & g ? '' : 'g' )\n\t\t\t\t+\n\t\t\t\t( flags & i ? '' : 'i' )\n\t\t\t\t+\n\t\t\t\t( flags & m ? '' : 'm' )\n\t\t\t\t+\n\t\t\t\t( flags & s ? '' : 's' )\n\t\t\t\t+\n\t\t\t\t( flags & u ? '' : 'u' )\n\t\t\t\t+\n\t\t\t\t( flags & y ? '' : 'y' )\n\t\t\t));\n\t\t}\n\t\treturn freeze ? freeze(newRegExp) : newRegExp;\n\t}();\n\n                         \n\t          \n\t          \n\t          \n\t          \n\t             \n   ",
			"import RegExp from '.RegExp';\n\nvar clearRegExp = '$_' in RegExp\n\t? /*#__PURE__*/function () {\n\t\tvar REGEXP = /^/;\n\t\tREGEXP.test = REGEXP.test;\n\t\treturn function clearRegExp                (value    )                {\n\t\t\tREGEXP.test('');\n\t\t\treturn value;\n\t\t};\n\t}()\n\t: function clearRegExp                (value    )                {\n\t\treturn value;\n\t};\n\nexport default clearRegExp;",
			"import create from '.Object.create?=';\nimport NULL from '.null.prototype';\n\nvar NEED_TO_ESCAPE_IN_REGEXP = /^[$()*+\\-.?[\\\\\\]^{|]/;\nvar SURROGATE_PAIR = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nvar GROUP = /*#__PURE__*/create(NULL)         ;\n\nexport default function groupify (branches                   , uFlag          , noEscape          )         {\n\tvar group = create(NULL)         ;\n\tvar appendBranch = uFlag ? appendPointBranch : appendCodeBranch;\n\tfor ( var length         = branches.length, index         = 0; index<length; ++index ) { appendBranch(group, branches[index] ); }\n\treturn sourcify(group, !noEscape);\n};\n\nfunction appendPointBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar character         = SURROGATE_PAIR.test(branch) ? branch.slice(0, 2) : branch.charAt(0);\n\t\tappendPointBranch(group[character] || ( group[character] = create(NULL)          ), branch.slice(character.length));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction appendCodeBranch (group       , branch        )       {\n\tif ( branch ) {\n\t\tvar character         = branch.charAt(0);\n\t\tappendCodeBranch(group[character] || ( group[character] = create(NULL)          ), branch.slice(1));\n\t}\n\telse { group[''] = GROUP; }\n}\n\nfunction sourcify (group       , needEscape         )         {\n\tvar branches           = [];\n\tvar singleCharactersBranch           = [];\n\tvar noEmptyBranch          = true;\n\tfor ( var character in group ) {\n\t\tif ( character ) {\n\t\t\tvar sub_branches         = sourcify(group[character] , needEscape);\n\t\t\tif ( needEscape && NEED_TO_ESCAPE_IN_REGEXP.test(character) ) { character = '\\\\' + character; }\n\t\t\tsub_branches ? branches.push(character + sub_branches) : singleCharactersBranch.push(character);\n\t\t}\n\t\telse { noEmptyBranch = false; }\n\t}\n\tsingleCharactersBranch.length && branches.unshift(singleCharactersBranch.length===1 ? singleCharactersBranch[0]  : '[' + singleCharactersBranch.join('') + ']');\n\treturn branches.length===0\n\t\t? ''\n\t\t: ( branches.length===1 && ( singleCharactersBranch.length || noEmptyBranch )\n\t\t\t? branches[0]\n\t\t\t: '(?:' + branches.join('|') + ')'\n\t\t)\n\t\t+ ( noEmptyBranch ? '' : '?' );\n}\n\n                                            \n",
			"import version from './version?text';\nimport theRegExp from './theRegExp';\nimport newRegExp from './newRegExp';\nimport clearRegExp from './clearRegExp';\nimport groupify from './groupify';\n\nexport {\n\tversion,\n\tnewRegExp,\n\ttheRegExp,\n\tclearRegExp,\n\tgroupify,\n};\n\nimport Default from '.default?=';\nexport default /*#__PURE__*/Default({\n\tversion: version,\n\tnewRegExp: newRegExp,\n\ttheRegExp: theRegExp,\n\tclearRegExp: clearRegExp,\n\tgroupify: groupify\n});\n"
		],
	"names":
		["Test","bind","test","re","string","call","Exec","exec","NT","ESCAPE","graveAccentReplacer","$$","includes","that","searchString","indexOf","RE","template","U","this","I","M","S","raw","source","replace","index","length","arguments","value","value_source","TypeError","unicode","SyntaxError","ignoreCase","multiline","dotAll","RegExp","flags","RE_bind","Context","CONTEXT","newRegExp","Proxy","apply","thisArg","args","get","defineProperty","preventExtensions","y","context","d","g","i","s","u","freeze","clearRegExp","REGEXP","NEED_TO_ESCAPE_IN_REGEXP","SURROGATE_PAIR","GROUP","create","NULL","appendPointBranch","group","branch","character","slice","charAt","appendCodeBranch","sourcify","needEscape","branches","singleCharactersBranch","noEmptyBranch","sub_branches","push","unshift","join","_export","Default","version","theRegExp","groupify","uFlag","noEscape","appendBranch"],
	"mappings":
		";;;;;;;;;;yOAAA,8ECIWA,EAAiDC,EAC5CA,EAAKA,KAAKC,GACvB,SAAUC,GACX,OAAO,SAAUC,GAChB,OAAOF,EAAKG,KAAKF,EAAIC,KAIbE,EAAiDL,EAC5CA,EAAKA,KAAKM,GACvB,SAAUJ,GACX,OAAO,SAAUC,GAChB,OAAOG,EAAKF,KAAKF,EAAIC,mJCNpBI,EAAK,WACLC,EAAS,OACb,SAASC,EAAqBC,GAAc,MAAY,QAALA,EAAa,IAAMA,EAEtE,IAAIC,EAAW,GAAGA,SACf,SAAUC,EAAcC,GAAwB,OAAOD,EAAKD,SAASE,IACrE,SAAUD,EAAcC,GAAwB,OAAOD,EAAKE,QAAQD,IAAe,GAEtF,SAASE,EAAmBC,GAS3B,IARA,IAAIC,EAAIC,KAAKD,EACTE,EAAID,KAAKC,EACTC,EAAIF,KAAKE,EACTC,EAAIH,KAAKG,EACTC,EAAMN,EAASM,IACfC,EAASD,EAAI,GAAIE,QAAQjB,EAAI,IAC7BkB,EAAQ,EACRC,EAASC,UAAUD,OACfD,IAAQC,GAAS,CACxB,IAAIE,EAMAD,UAAUF,GACd,GAAoB,iBAARG,EAAqBL,GAAUK,MACtC,CACJ,IAAIC,EAAeD,EAAML,OACzB,GAA2B,iBAAfM,EAA4B,MAAMC,EAAU,UACxD,GAAKF,EAAMG,UAAUd,EAAM,MAAMe,EAAY,WAC7C,GAAKJ,EAAMK,aAAad,EAAM,MAAMa,EAAY,cAChD,GAAKJ,EAAMM,YAAYd,IAAOT,EAASkB,EAAc,MAAQlB,EAASkB,EAAc,MAAW,MAAMG,EAAY,aACjH,GAAKJ,EAAMO,SAASd,GAAKV,EAASkB,EAAc,KAAS,MAAMG,EAAY,UAC3ET,GAAUM,EAEXN,GAAUD,EAAIG,KAAUD,QAAQjB,EAAI,IAErC,IAAIL,EAAakC,EAAOnB,EAAIM,EAASA,EAAOC,QAAQhB,EAAQC,GAAuBc,EAAQL,KAAKmB,OAC5FpC,EAAOC,EAAGD,KAAOF,EAAKG,GACtBI,EAAOJ,EAAGI,KAAOD,EAAKH,GAM1B,OALAD,EAAKsB,OAASjB,EAAKiB,OAASA,EAC5BtB,EAAK8B,QAAUzB,EAAKyB,SAAWd,EAC/BhB,EAAKgC,WAAa3B,EAAK2B,YAAcd,EACrClB,EAAKiC,UAAY5B,EAAK4B,UAAYvB,EAASY,EAAQ,MAAQZ,EAASY,EAAQ,MAAQH,EAAI,KACxFnB,EAAKkC,OAAS7B,EAAK6B,OAASxB,EAASY,EAAQ,MAAQF,EAAI,KAClDnB,EAGR,IAAIoC,EAAUtC,GAAqBA,EAAKA,KAAKe,GAE7C,SAASwB,EAASF,GACjB,MAAO,CACNpB,GAAIN,EAAS0B,EAAO,KACpBlB,GAAIR,EAAS0B,EAAO,KACpBjB,GAAIT,EAAS0B,EAAO,KACpBhB,GAAIV,EAAS0B,EAAO,KACpBA,MAAOA,GAIT,IAAIG,EAAgCD,EAAQ,IAE5CE,EAAeC,EACC,IAAIA,EAAM3B,EAAI,CAC5B4B,MAAO,SAAU5B,EAAI6B,EAASC,GAA2C,OAAOF,EAAM5B,EAAIyB,EAASK,IAEnGC,IAAK,SAAU/B,EAAIsB,GAAiB,OAAOC,EAAQC,EAAQF,KAE3DU,eAAgB,WAAc,OAAO,GAErCC,kBAAmB,WAAc,OAAO,KAE1B,WACdjC,EAAG4B,MAAQ5B,EAAG4B,MAUd,IATA,IAAIF,EAAY,WAAc,OAAO1B,EAAG4B,MAAMH,EAASb,YAQnDU,EAAQY,GACJZ,MACP,SAAYa,GACXT,EAAUS,EAAQb,OAAS,WAAc,OAAOtB,EAAG4B,MAAMO,EAASvB,YADnE,CAEIY,GAXG,EAYJF,EAAY,GAAK,MAXbc,EAaJd,EAAY,GAAK,MAZbe,EAcJf,EAAY,GAAK,MAbbgB,EAeJhB,EAAY,GAAK,MAdbgB,EAgBJhB,EAAY,GAAK,MAfbiB,GAiBJjB,EAAY,GAAK,MAhBbkB,GAkBJlB,EAAY,GAAK,OAGrB,OAAOmB,EAASA,EAAOf,GAAaA,EA9BtB,GChFZgB,EAAc,OAAQrB,EACV,WACd,IAAIsB,EAAS,IAEb,OADAA,EAAOzD,KAAOyD,EAAOzD,KACd,SAAqC2B,GAE3C,OADA8B,EAAOzD,KAAK,IACL2B,GALM,GAQb,SAAqCA,GACtC,OAAOA,6+BCTL+B,EAA2B,uBAC3BC,EAAiB,kCACjBC,EAAqBC,EAAOC,GAShC,SAASC,EAAmBC,EAAcC,GACzC,GAAKA,EAAS,CACb,IAAIC,EAAoBP,EAAe3D,KAAKiE,GAAUA,EAAOE,MAAM,EAAG,GAAKF,EAAOG,OAAO,GACzFL,EAAkBC,EAAME,KAAgBF,EAAME,GAAaL,EAAOC,IAAkBG,EAAOE,MAAMD,EAAUzC,cAErGuC,EAAM,IAAMJ,EAGpB,SAASS,EAAkBL,EAAcC,GACxC,GAAKA,EAAS,CACb,IAAIC,EAAoBD,EAAOG,OAAO,GACtCC,EAAiBL,EAAME,KAAgBF,EAAME,GAAaL,EAAOC,IAAkBG,EAAOE,MAAM,SAE1FH,EAAM,IAAMJ,EAGpB,SAASU,EAAUN,EAAcO,GAChC,IAAIC,EAAqB,GACrBC,EAAmC,GACnCC,GAAyB,EAC7B,IAAM,IAAIR,KAAaF,EACtB,GAAKE,EAAY,CAChB,IAAIS,EAAuBL,EAASN,EAAME,GAAaK,GAClDA,GAAcb,EAAyB1D,KAAKkE,KAAeA,EAAY,KAAOA,GACnFS,EAAeH,EAASI,KAAKV,EAAYS,GAAgBF,EAAuBG,KAAKV,QAE/EQ,GAAgB,EAGxB,OADAD,EAAuBhD,QAAU+C,EAASK,QAAwC,IAAhCJ,EAAuBhD,OAAagD,EAAuB,GAAM,IAAMA,EAAuBK,KAAK,IAAM,KAClI,IAAlBN,EAAS/C,OACb,IACoB,IAAlB+C,EAAS/C,SAAgBgD,EAAuBhD,QAAUiD,GAC3DF,EAAS,GACT,MAAQA,EAASM,KAAK,KAAO,MAE5BJ,EAAgB,GAAK,gPClC3BK,gbAA4BC,CAAQ,CACnCC,QLhBa,QKiBbzC,UAAWA,EACX0C,UJEc,SAAoBjF,GAClC,IAAID,EAAOC,EAAGD,KAAOF,EAAKG,GACtBI,EAAOJ,EAAGI,KAAOD,EAAKH,GACtBqB,EAAStB,EAAKsB,OAASjB,EAAKiB,OAASrB,EAAGqB,OAK5C,OAJAtB,EAAK8B,QAAUzB,EAAKyB,QAAU7B,EAAG6B,QACjC9B,EAAKgC,WAAa3B,EAAK2B,WAAa/B,EAAG+B,WACvChC,EAAKiC,UAAY5B,EAAK4B,UAAYX,EAAOT,QAAQ,KAAK,GAAKS,EAAOT,QAAQ,KAAK,EAAI,KAAOZ,EAAGgC,UAC7FjC,EAAKkC,OAAS7B,EAAK6B,OAASZ,EAAOT,QAAQ,KAAK,EAAI,KAAOZ,EAAGiC,OACvDjC,GITPuD,YAAaA,EACb2B,SDbc,SAAmBX,EAA6BY,EAAiBC,GAG/E,IAFA,IAAIrB,EAAQH,EAAOC,GACfwB,EAAeF,EAAQrB,EAAoBM,EACrC5C,EAAiB+C,EAAS/C,OAAQD,EAAgB,EAAGA,EAAMC,IAAUD,EAAU8D,EAAatB,EAAOQ,EAAShD,IACtH,OAAO8C,EAASN,GAAQqB"
}